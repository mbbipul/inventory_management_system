// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inventory_rest_api.Models;

namespace inventory_rest_api.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("inventory_rest_api.Models.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Cost", b =>
                {
                    b.Property<long>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CostAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("CostDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CostId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerJoinDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Damage", b =>
                {
                    b.Property<long>("DamageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("DamageProductAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("DamageRetComProQuantity")
                        .HasColumnType("bigint");

                    b.Property<bool>("DamageRetComProQuantityDueStatus")
                        .HasColumnType("bit");

                    b.Property<string>("DamageRetDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DamageRetFromComAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("DamageRetFromCompanyDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageSentToCompanyDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageSentToCompanyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DamgeReturnCompanyDueAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("DamgeReturnCompanyDueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DamgeReturnCompanyDuePaymentStatus")
                        .HasColumnType("bit");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("DamageId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Damages");
                });

            modelBuilder.Entity("inventory_rest_api.Models.DamageDeliveryHistory", b =>
                {
                    b.Property<long>("DamageDeliveryHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DamageId")
                        .HasColumnType("bigint");

                    b.Property<int>("DeliverProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("DamageDeliveryHistoryId");

                    b.HasIndex("DamageId");

                    b.ToTable("DamageDeliveryHistories");
                });

            modelBuilder.Entity("inventory_rest_api.Models.DamageReceptionHistory", b =>
                {
                    b.Property<long>("DamageReceptionHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DamageId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecievedProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("DamageReceptionHistoryId");

                    b.HasIndex("DamageId");

                    b.ToTable("DamageReceptionHistories");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("MiscellaneousCost")
                        .HasColumnType("bigint");

                    b.Property<string>("OrderDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("OrderStaus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("inventory_rest_api.Models.PaymentPurchase", b =>
                {
                    b.Property<long>("PaymentPurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PaymentAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentPurchaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.HasKey("PaymentPurchaseId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PaymentPurchases");
                });

            modelBuilder.Entity("inventory_rest_api.Models.PaymentSales", b =>
                {
                    b.Property<long>("PaymentSalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PaymentAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentSalesDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SalesId")
                        .HasColumnType("bigint");

                    b.HasKey("PaymentSalesId");

                    b.HasIndex("SalesId");

                    b.ToTable("PaymentSales");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("SalestPrice")
                        .HasColumnType("bigint");

                    b.Property<int>("TotalProductInStock")
                        .HasColumnType("int");

                    b.Property<int>("TotalProducts")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("inventory_rest_api.Models.ProductCategory", b =>
                {
                    b.Property<long>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("inventory_rest_api.Models.ProductPurchaseHistory", b =>
                {
                    b.Property<long>("ProductPurchaseHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PerProductPurchasePrice")
                        .HasColumnType("bigint");

                    b.Property<long>("PerProductSalesPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductQuantity")
                        .HasColumnType("bigint");

                    b.HasKey("ProductPurchaseHistoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPurchaseHistories");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Purchase", b =>
                {
                    b.Property<long>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchaseDiscount")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchaseDuePaymentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PurchasePaidStatus")
                        .HasColumnType("bit");

                    b.Property<long>("PurchasePaymentAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchasePrice")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("PurchaseId");

                    b.HasIndex("ProductId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("inventory_rest_api.Models.PurchaseDueProduct", b =>
                {
                    b.Property<long>("PurchaseDueProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.HasKey("PurchaseDueProductId");

                    b.HasIndex("PurchaseId")
                        .IsUnique();

                    b.ToTable("PurchaseDueProducts");
                });

            modelBuilder.Entity("inventory_rest_api.Models.PurchaseHistory", b =>
                {
                    b.Property<long>("PurchaseHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReceptionDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseHistoryId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchaseHistories");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Salary", b =>
                {
                    b.Property<long>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("SalaryAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("SalaryPaymentDate")
                        .HasColumnType("bigint");

                    b.HasKey("SalaryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Sales", b =>
                {
                    b.Property<long>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductPurchaseHistoryId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SalesDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SalesDiscount")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesDueAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("SalesDuePaymentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SalesPaidStatus")
                        .HasColumnType("bit");

                    b.Property<long>("SalesPaymentAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesPrice")
                        .HasColumnType("bigint");

                    b.HasKey("SalesId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductPurchaseHistoryId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("inventory_rest_api.Models.SalesDueProduct", b =>
                {
                    b.Property<long>("SalesDueProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<long>("SalesId")
                        .HasColumnType("bigint");

                    b.HasKey("SalesDueProductId");

                    b.HasIndex("SalesId")
                        .IsUnique();

                    b.ToTable("SalesDueProducts");
                });

            modelBuilder.Entity("inventory_rest_api.Models.SalesHistory", b =>
                {
                    b.Property<long>("SalesHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeliveryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<long>("SalesId")
                        .HasColumnType("bigint");

                    b.HasKey("SalesHistoryId");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesHistories");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("inventory_rest_api.Models.Damage", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Customer", "Customer")
                        .WithMany("Damages")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("inventory_rest_api.Models.Employee", "Employee")
                        .WithMany("Damages")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("inventory_rest_api.Models.Product", "Product")
                        .WithMany("Damages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("inventory_rest_api.Models.Supplier", "Supplier")
                        .WithMany("Damages")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.DamageDeliveryHistory", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Damage", "Damage")
                        .WithMany("DamageDeliveryHistories")
                        .HasForeignKey("DamageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.DamageReceptionHistory", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Damage", "Damage")
                        .WithMany("DamageReceptionHistories")
                        .HasForeignKey("DamageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.Order", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("inventory_rest_api.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("inventory_rest_api.Models.Sales", "Sales")
                        .WithOne("Order")
                        .HasForeignKey("inventory_rest_api.Models.Order", "SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.PaymentPurchase", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Purchase", "Purchase")
                        .WithMany("PaymentPurchases")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.PaymentSales", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Sales", "Sales")
                        .WithMany("PaymentSales")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.Product", b =>
                {
                    b.HasOne("inventory_rest_api.Models.ProductCategory", "ProductCategories")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.ProductPurchaseHistory", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Product", "Product")
                        .WithMany("ProductPurchaseHistories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.Purchase", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Product", "Product")
                        .WithMany("Purchases")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.PurchaseDueProduct", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Purchase", "Purchase")
                        .WithOne("PurchaseDueProduct")
                        .HasForeignKey("inventory_rest_api.Models.PurchaseDueProduct", "PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.PurchaseHistory", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Purchase", "Purchase")
                        .WithMany("PurchaseHistories")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.Salary", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.Sales", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Product", "Product")
                        .WithMany("Saleses")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("inventory_rest_api.Models.ProductPurchaseHistory", "ProductPurchaseHistory")
                        .WithMany("Sales")
                        .HasForeignKey("ProductPurchaseHistoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.SalesDueProduct", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Sales", "Sales")
                        .WithOne("SalesDueProduct")
                        .HasForeignKey("inventory_rest_api.Models.SalesDueProduct", "SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.SalesHistory", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Sales", "Sales")
                        .WithMany("SalesHistories")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("inventory_rest_api.Models.Supplier", b =>
                {
                    b.HasOne("inventory_rest_api.Models.Company", "Company")
                        .WithMany("Suppliers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
